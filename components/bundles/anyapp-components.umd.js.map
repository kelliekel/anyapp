{"version":3,"file":"anyapp-components.umd.js.map","sources":["ng://@anyapp/components/lib/components.model.ts","ng://@anyapp/components/lib/components.config.ts","ng://@anyapp/components/lib/components.service.ts",null,"ng://@anyapp/components/lib/base-control.ts","ng://@anyapp/components/lib/util.ts","ng://@anyapp/components/lib/form-control.ts","ng://@anyapp/components/lib/button/button.component.ts","ng://@anyapp/components/lib/table/table.component.ts","ng://@anyapp/components/lib/error-state-matcher.ts","ng://@anyapp/components/lib/model-control.ts","ng://@anyapp/components/lib/input/input.component.ts","ng://@anyapp/components/lib/checkbox/checkbox.component.ts","ng://@anyapp/components/lib/select/select.component.ts","ng://@anyapp/components/lib/datepicker/datepicker.component.ts","ng://@anyapp/components/lib/slider/slider.component.ts","ng://@anyapp/components/lib/icon/icon.component.ts","ng://@anyapp/components/lib/textarea/textarea.component.ts","ng://@anyapp/components/lib/label/label.component.ts","ng://@anyapp/components/lib/form/form.directive.ts","ng://@anyapp/components/lib/loading/loading.component.ts","ng://@anyapp/components/lib/error/error.component.ts","ng://@anyapp/components/lib/table/paginator.intl.ts","ng://@anyapp/components/lib/table/sort.intl.ts","ng://@anyapp/components/lib/top-menu/top-menu.component.ts","ng://@anyapp/components/lib/side-menu/side-menu.component.ts","ng://@anyapp/components/lib/side-menu/side-menu-item/side-menu-item.component.ts","ng://@anyapp/components/lib/components.module.ts"],"sourcesContent":["export class AnyAppEventModel<T = {}> {\r\n\tkey: AnyAppEventKeys;\r\n\tvalue?: T;\r\n\r\n\tconstructor(key: AnyAppEventKeys, value?: T) {\r\n\t\tthis.key = key;\r\n\t\tthis.value = value;\r\n\t}\r\n}\r\n\r\nexport class AnyAppMenuItem {\r\n\ttext: string;\r\n\tkey: string;\r\n}\r\n\r\nexport class AnyAppTreeModel {\r\n    public text: string;\r\n    public children: AnyAppTreeModel[];\r\n    public Id: number;\r\n    public expanded?:boolean;\r\n    public navigateUrl?: string;\r\n    \r\n    constructor(id: number, text: string, children?: AnyAppTreeModel[], expanded?: boolean, navigateUrl?: string) {\r\n        this.text = text;\r\n        this.children = children;\r\n        this.Id = id;\r\n        this.expanded = expanded;\r\n        this.navigateUrl = navigateUrl;\r\n    }\r\n    \r\n    toggle(){\r\n        this.expanded = !this.expanded;\r\n    }\r\n}\r\n\r\nexport enum AnyAppEventKeys {\r\n\tMESSAGE_CLICK = 1,\r\n\tMENU_ITEM_CLICK = 2,\r\n\tMENU_FACE_CLICK = 3,\r\n\tMENU_NOTIFICATION_CLICK = 4,\r\n}","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport const ANYAPP_COMPONENTS_CONFIG = new InjectionToken<AnyAppComponentsConfig>('anyapp-default-components-options');\r\n\r\nexport interface AnyAppComponentsConfig {\r\n\tmessageDuration: number;\r\n\tlocale: string;\r\n\t//\r\n\terrorMessages: AnyAppErrorMessages;\r\n\tlocales: AnyAppLocales;\r\n\t//\r\n\tbuttonConfig: AnyAppButtonConfig;\r\n\tformConfig: AnyAppFormConfig;\r\n\ttableConfig: AnyAppTableConfig;\r\n}\r\n\r\nexport interface AnyAppButtonConfig {\r\n\tbuttonTimeoutThreshold: number;\r\n}\r\n\r\nexport interface AnyAppFormConfig {\r\n}\r\n\r\nexport interface AnyAppTableConfig {\r\n\tpageSize: number;\r\n\tselectOption: TableSelectEnum;\r\n}\r\n\r\nexport interface AnyAppErrorMessages {\r\n\trequired: string;\r\n\temail: string;\r\n\tpattern: string;\r\n\tminLength: string;\r\n\tmaxLength: string;\r\n\tinvalidFormMessage: string;\r\n}\r\n\r\nexport interface AnyAppLocales {\r\n\tpaginator_firstPage: string;\r\n\tpaginator_lastPage: string;\r\n\tpaginator_itemsPerPage: string;\r\n\tpaginator_of: string;\r\n\tpaginator_nextPage: string;\r\n\tpaginator_previousPage: string;\r\n\r\n\tsort_buttonLabel: string;\r\n}\r\n\r\nexport enum TableSelectEnum {\r\n\tNoSelect = 0,\r\n\tSingleSelect = 1,\r\n\tMultiSelect = 2,\r\n}","import { MatSnackBar, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar } from '@angular/material';\nimport { Injectable, Inject } from '@angular/core';\nimport { ANYAPP_COMPONENTS_CONFIG, AnyAppComponentsConfig } from './components.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {  \n  constructor(\n    @Inject(ANYAPP_COMPONENTS_CONFIG) private config: AnyAppComponentsConfig,\n    private _snackbar: MatSnackBar) { \n  }\n\n  public showMessage(message: string, action: string) : MatSnackBarRef<SimpleSnackBar> {\n    return this._snackbar.open(message, action, <MatSnackBarConfig>{\n      duration: this.config.messageDuration\n    });\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Input, Injector, Output, EventEmitter } from \"@angular/core\";\r\nimport { AnyAppComponentsConfig, ANYAPP_COMPONENTS_CONFIG } from \"./components.config\";\r\nimport { ComponentsService } from \"./components.service\";\r\nimport { AnyAppEventModel } from \"./components.model\";\r\n\r\nexport abstract class AnyAppBaseControl {\r\n  @Output() onEvent: EventEmitter<AnyAppEventModel> = new EventEmitter<AnyAppEventModel>();\r\n  \r\n  config: AnyAppComponentsConfig;\r\n  componentsService: ComponentsService;\r\n\r\n  constructor(private _injector: Injector) {\r\n    this.config = _injector.get(ANYAPP_COMPONENTS_CONFIG);\r\n    this.componentsService = _injector.get(ComponentsService);\r\n  }\r\n}","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport const hasRequiredField = (abstractControl: AbstractControl): boolean => {\r\n    if (abstractControl.validator) {\r\n        const validator = abstractControl.validator({}as AbstractControl);\r\n        if (validator && validator.required) {\r\n            return true;\r\n        }\r\n    }\r\n    if (abstractControl['controls']) {\r\n        for (const controlName in abstractControl['controls']) {\r\n            if (abstractControl['controls'][controlName]) {\r\n                if (hasRequiredField(abstractControl['controls'][controlName])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};","import { Input, Injector } from \"@angular/core\";\r\nimport { NgForm, FormControl } from \"@angular/forms\";\r\nimport { AnyAppComponentsConfig, ANYAPP_COMPONENTS_CONFIG } from \"./components.config\";\r\nimport { AnyAppBaseControl } from \"./base-control\";\r\nimport { hasRequiredField } from \"./util\";\r\n\r\nexport abstract class AnyAppFormControl extends AnyAppBaseControl {\r\n  @Input() form: NgForm; // form contains formgroup\r\n  @Input() formControlName: string;\r\n  @Input() formControl: FormControl;\r\n  @Input() disabled: boolean = false;\r\n\r\n  hasRequiredField: boolean;\r\n\r\n  constructor(_injector: Injector) {\r\n    super(_injector);\r\n  }\r\n\r\n  initializeForm() {\r\n    if (this.formControlName) { // name = set\r\n      if (this.formControl == null) { // fc is not set\r\n        if (this.form && this.form.form) { // find control and set\r\n          this.formControl = this.form.form.controls[this.formControlName] as FormControl;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.formControl) {\r\n      this.hasRequiredField = hasRequiredField(this.formControl);\r\n    }\r\n  }\r\n}","import { Component, OnInit, HostListener, ElementRef, Renderer2, Input, Inject, Injector } from '@angular/core';\nimport { AnyAppFormControl } from '../form-control';\n\n@Component({\n  selector: 'aa-comp-button',\n  template: `<ng-container [ngSwitch]=\"style\">\n  <button id=\"button\" *ngSwitchCase=\"'raised'\" mat-raised-button [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n  <button id=\"button\" *ngSwitchCase=\"'stroked'\" mat-stroked-button [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n  <button id=\"button\" *ngSwitchCase=\"'flat'\" mat-flat-button [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n  <button id=\"button\" *ngSwitchCase=\"'icon'\" mat-icon-button [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n  <button id=\"button\" *ngSwitchCase=\"'fab'\" mat-fab [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n  <button id=\"button\" *ngSwitchDefault mat-button [type]=\"type\" [disabled]=\"disabled\" [color]=\"color\"><ng-container *ngTemplateOutlet=\"transclude\"></ng-container></button>\n</ng-container>\n\n<ng-template #transclude><ng-content></ng-content></ng-template>`,\n  styles: [``]\n})\nexport class ButtonComponent extends AnyAppFormControl implements OnInit {\n  @Input() timeout: boolean = true;\n\n  @Input() type: string = 'button';\n\n  @Input() style: 'default' | 'raised' | 'stroked' | 'flat' | 'icon' | 'fab' = 'flat'\n  @Input() color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(\n    _injector: Injector,\n    private renderer: Renderer2, \n    private el: ElementRef) {\n      super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  @HostListener('click', ['$event'])\n  submitAttachedForm(event: Event) {\n    if (this.form != null && this.type == \"button\") { // if form is set and type is button\n      this.form.onSubmit(event); // this will also update the submitted state\n      //this.form.ngSubmit.next(true);\n      //this.form.ngSubmit.emit(event);\n    }\n\n    // make sure a user can not click the button multiple times within a limited time\n    this.handleButtonTimeoutTreshold();\n  }\n\n  private handleButtonTimeoutTreshold() {\n    if (this.timeout) {\n      setTimeout(() => {\n        this.setDisabled(true);\n        setTimeout(() => { this.setDisabled(null); }, this.config.buttonConfig.buttonTimeoutThreshold);\n      }, 0);\n    }\n  }\n\n  private setDisabled(disabled: boolean) {\n    if (disabled)\n      this.renderer.setAttribute(this.el.nativeElement.children[\"button\"], \"disabled\", disabled.toString());\n    else\n      this.renderer.removeAttribute(this.el.nativeElement.children[\"button\"], \"disabled\");\n  }\n}","import { Component, OnInit, Input, ViewChild, Injector } from '@angular/core';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AnyAppBaseControl } from '../base-control';\n\n@Component({\n  selector: 'aa-comp-table',\n  template: `<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n  \n  <ng-container *ngIf=\"allowSelect\" matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-checkbox *ngIf=\"allowMultiSelect\" (change)=\"$event ? masterToggle() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n      </mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col}} </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element[col]}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n</table>\n\n<mat-paginator showFirstLastButtons></mat-paginator>`,\n  styles: [`table{width:100%}`]\n})\nexport class TableComponent extends AnyAppBaseControl implements OnInit {\n  //\n  // mandatory\n  //  \n  @Input() data: any[];\n  @Input() columns: string[];\n  //\n  // Not mandatory\n  //\n  @Input() allowSort: boolean = true;\n  @Input() allowPaging: boolean = true;\n  @Input() pageSize: number = 50;\n  @Input() allowSelect: boolean = false;\n  @Input() allowMultiSelect: boolean = false;\n    \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  selection: SelectionModel<any>;\n\n  dataSource: MatTableDataSource<any>;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<any>(this.data);\n    this.selection = new SelectionModel<any>(this.allowMultiSelect, []);\n    \n    if(this.allowPaging) {\n      this.paginator.pageSize = this.pageSize;\n      this.dataSource.paginator = this.paginator;\n    }\n\n    if(this.allowSort)\n      this.dataSource.sort = this.sort;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n}\n","import { ErrorStateMatcher } from \"@angular/material\";\r\nimport { FormControl, FormGroupDirective, NgForm } from \"@angular/forms\";\r\n\r\nexport class AnyAppErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    var returnVal = !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    return returnVal;\r\n  }\r\n}","import { AnyAppFormControl } from \"./form-control\";\r\nimport { Injector } from \"@angular/core\";\r\nimport { AnyAppErrorStateMatcher } from \"./error-state-matcher\";\r\n\r\nexport abstract class AnyAppModelControl extends AnyAppFormControl {\r\n\tprivate _innerValue: any = null;\r\n\tmatcher: AnyAppErrorStateMatcher;\r\n\r\n\tconstructor(_injector: Injector) {\r\n\t\tsuper(_injector);\r\n\t\tthis.matcher = new AnyAppErrorStateMatcher();\r\n\t}\r\n\r\n\tget innerValue() {\r\n\t\treturn this._innerValue;\r\n\t}\r\n\tset innerValue(val) {\r\n\t\tthis._innerValue = val;\r\n\t\tthis.propagateChange(this._innerValue);\r\n\t}\r\n\t\r\n\tonModelChange(event) {\r\n\t\tif (this._innerValue != event) {\r\n\t\t\tthis.innerValue = event; // update only if changed\r\n\t\t}\r\n\t}\r\n\r\n\t// gets called when the form is initialized (write to view)\r\n\twriteValue(value: any) {\r\n\t\tif (value !== undefined) {\r\n\t\t\tthis._innerValue = value;\r\n\t\t}\r\n\t}\r\n\r\n\t// propagate the new value to the outside world\r\n\tpropagateChange = (_: any) => { };\r\n\r\n\t// has access to a function that informs the outside world about changes\r\n\tregisterOnChange(fn) {\r\n\t\tthis.propagateChange = fn;\r\n\t}\r\n\r\n\t// registers a callback that is excuted whenever a form control is âtouchedâ\r\n\tregisterOnTouched() { }\r\n}","import { Component, OnInit, Input, forwardRef, Injector } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\n\n@Component({\n  selector: 'aa-comp-input',\n  template: `<aa-comp-label *ngIf=\"label\">\n  {{label}}\n</aa-comp-label>\n\n<mat-form-field>\n  <input matInput [placeholder]=\"placeholder\" #input [type]=\"type\" [(ngModel)]=\"innerValue\" \n    [errorStateMatcher]=\"matcher\" [disabled]=\"disabled\">\n\n  <mat-hint align=\"start\" *ngIf=\"hint\">{{hint}}</mat-hint>\n  <mat-hint align=\"end\" *ngIf=\"maxLength\">{{input.value.length}} / {{maxLength}}</mat-hint>\n\n  \n  <aa-comp-error [errorControl]=\"formControl\"></aa-comp-error>\n\n</mat-form-field>\n<!--[formControl]=\"form?.controls[formControlName]\"-->`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, //Angular internaly injects all values that are registered on the NG_VALUE_ACCESSOR token\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends AnyAppModelControl implements OnInit, ControlValueAccessor {  \n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() type: string = \"text\";\n  @Input() hint: string;\n\n  @Input() maxLength: number = null;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n}\n","import { Component, OnInit, forwardRef, Input, Injector } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\n\n@Component({\n  selector: 'aa-comp-checkbox',\n  template: `<mat-checkbox *ngIf=\"!slideToggle\" #input [(ngModel)]=\"innerValue\" [labelPosition]=\"labelPosition\">\n  <aa-comp-label *ngIf=\"label\">\n    {{label}}\n  </aa-comp-label>\n</mat-checkbox>\n\n<mat-slide-toggle *ngIf=\"slideToggle\" #input [(ngModel)]=\"innerValue\" [disabled]=\"disabled\">\n  <aa-comp-label *ngIf=\"label\">\n    {{label}}\n  </aa-comp-label>\n</mat-slide-toggle>\n\n<mat-hint *ngIf=\"hint\">{{hint}}</mat-hint>`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, //Angular internaly injects all values that are registered on the NG_VALUE_ACCESSOR token\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent extends AnyAppModelControl implements OnInit, ControlValueAccessor {\n  @Input() label: string;\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() hint: string;\n  @Input() slideToggle: boolean = false;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n}\n","import { Component, OnInit, forwardRef, Input, Injector } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\n\n@Component({\n  selector: 'aa-comp-select',\n  template: `<aa-comp-label *ngIf=\"label\">\n  {{label}}\n</aa-comp-label>\n\n<mat-form-field>\n  <mat-select *ngIf=\"!multiple\" [placeholder]=\"placeholder\" #input [(ngModel)]=\"innerValue\" [disabled]=\"disabled\"\n    [errorStateMatcher]=\"matcher\">\n    <mat-option *ngIf=\"hasRequiredField == false\">Maak een keuze</mat-option>\n    <mat-option *ngFor=\"let item of items\" [value]=\"valueField != null ? item[valueField] : item\">{{textField != null ? item[textField] : item}}</mat-option>\n  </mat-select>\n  \n  <mat-select *ngIf=\"multiple\" multiple [placeholder]=\"placeholder\" #input [(ngModel)]=\"innerValue\" [disabled]=\"disabled\"\n    [errorStateMatcher]=\"matcher\">\n    <mat-option *ngIf=\"hasRequiredField == false\">Maak een keuze</mat-option>\n    <mat-option *ngFor=\"let item of items\" [value]=\"valueField != null ? item[valueField] : item\">{{textField != null ? item[textField] : item}}</mat-option>\n  </mat-select>\n\n  <mat-hint *ngIf=\"hint\">{{hint}}</mat-hint>\n  \n  \n</mat-form-field>\n<aa-comp-error [errorControl]=\"formControl\"></aa-comp-error>`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, //Angular internaly injects all values that are registered on the NG_VALUE_ACCESSOR token\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent extends AnyAppModelControl implements OnInit {\n  @Input() items: any[];\n  @Input() valueField: string = \"id\";\n  @Input() textField: string = \"text\";\n\n  @Input() multiple: boolean = false;\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() hint: string;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n}\n","import { Component, OnInit, Input, forwardRef, Inject, Injector } from '@angular/core';\nimport { FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\nimport { ANYAPP_COMPONENTS_CONFIG, AnyAppComponentsConfig } from '../components.config';\n// tslint:disable-next-line:no-duplicate-imports\n//import {default as _rollupMoment} from 'moment';\n\nconst moment = /*_rollupMoment ||*/ _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'aa-comp-datepicker',\n  template: `<aa-comp-label *ngIf=\"label\">\n  {{label}}\n</aa-comp-label>\n\n<mat-form-field>\n  <input matInput [disabled]=\"disabled\" [matDatepicker]=\"picker\" [placeholder]=\"placeholder\" #input [(ngModel)]=\"innerValue\" [errorStateMatcher]=\"matcher\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n\n  <mat-hint *ngIf=\"hint\">{{hint}}</mat-hint>\n\n\n  <aa-comp-error [errorControl]=\"formControl\"></aa-comp-error>\n</mat-form-field>`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, //Angular internaly injects all values that are registered on the NG_VALUE_ACCESSOR token\n      useExisting: forwardRef(() => DatepickerComponent),\n      multi: true\n    },\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ]\n})\nexport class DatepickerComponent extends AnyAppModelControl implements OnInit, ControlValueAccessor {  \n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() hint: string;\n\n  @Input() locale: string;\n\n  constructor(\n    _injector: Injector,\n    private _adapter: DateAdapter<any>) {\n    super(_injector);\n\n    this.locale = this.config.locale;\n  }\n\n  ngOnInit() {\n    this._adapter.setLocale(this.locale);\n    this.initializeForm();\n  }\n}\n","import { Component, OnInit, forwardRef, Input, Injector } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\n\n@Component({\n  selector: 'aa-comp-slider',\n  template: `<aa-comp-label *ngIf=\"label\">\n    {{label}}\n  </aa-comp-label>\n  \n<mat-slider [min]=\"min\" [max]=\"max\" [step]=\"step\" #input [(ngModel)]=\"innerValue\" \n  [disabled]=\"disabled\"></mat-slider>\n\n<mat-hint *ngIf=\"hint\">{{hint}}</mat-hint>\n\n\n<aa-comp-error [errorControl]=\"formControl\"></aa-comp-error>`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, //Angular internaly injects all values that are registered on the NG_VALUE_ACCESSOR token\n      useExisting: forwardRef(() => SliderComponent),\n      multi: true\n    }\n  ]\n})\nexport class SliderComponent extends AnyAppModelControl implements OnInit {\n  @Input() label: string;\n  @Input() hint: string;\n\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step: number;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n}\n","import { Component, OnInit, Input, Injector } from '@angular/core';\nimport { AnyAppFormControl } from '../form-control';\n\n@Component({\n  selector: 'aa-comp-icon',\n  template: `<mat-icon [color]=\"color\" [inline]=\"inline\">{{icon}}</mat-icon>\n`,\n  styles: [``]\n})\nexport class IconComponent extends AnyAppFormControl implements OnInit {\n  @Input() icon: string;\n  @Input() color: string;\n  @Input() inline: boolean;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n}\n","import { Component, OnInit, Input, forwardRef, Injector } from '@angular/core';\nimport { FormControl, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AnyAppModelControl } from '../model-control';\n\n@Component({\n  selector: 'aa-comp-textarea',\n  template: `<aa-comp-label *ngIf=\"label\">\n  {{label}}\n</aa-comp-label>\n\n<mat-form-field>\n  <textarea matInput [placeholder]=\"placeholder\" #input [type]=\"type\" [(ngModel)]=\"innerValue\" \n    [errorStateMatcher]=\"matcher\" [disabled]=\"disabled\"></textarea>\n\n  <mat-hint *ngIf=\"hint\">{{hint}}</mat-hint>\n  \n<aa-comp-error [errorControl]=\"formControl\"></aa-comp-error>\n\n</mat-form-field>\n<!--[formControl]=\"form?.controls[formControlName]\"-->`,\n  styles: [``],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, \n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent extends AnyAppModelControl implements OnInit, ControlValueAccessor {  \n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() type: string = \"text\";\n  @Input() hint: string;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n}\n","import { Component, OnInit, Input, Injector } from '@angular/core';\nimport { AnyAppFormControl } from '../form-control';\n\n@Component({\n  selector: 'aa-comp-label',\n  template: `<label [for]=\"for\">\n  <ng-content></ng-content>\n</label>`,\n  styles: [``]\n})\nexport class LabelComponent extends AnyAppFormControl implements OnInit {\n  @Input() for: string;\n  \n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, OnInit, OnChanges, Input, Inject, Output, EventEmitter, Injector } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AnyAppEventModel, AnyAppEventKeys } from '../components.model';\nimport { AnyAppBaseControl } from '../base-control';\n\n@Directive({\n  selector: '[aa-comp-form]'\n})\nexport class FormDirective extends AnyAppBaseControl implements OnInit, OnChanges {\n  @Input() aaCompForm: NgForm;\n  @Input() reset: boolean;\n  @Input() invalidFormMessage: string;\n\n  constructor(\n    _injector: Injector) {\n      super(_injector);\n  }\n\n  ngOnInit() {\n    if(this.aaCompForm != null) {\n      this.aaCompForm.ngSubmit.subscribe((data) => {\n        if(this.aaCompForm.valid == false) {\n          var sb = this.componentsService.showMessage(this.config.errorMessages.invalidFormMessage, null);\n          sb.onAction().subscribe(x => {\n            this.onEvent.emit(new AnyAppEventModel(AnyAppEventKeys.MESSAGE_CLICK))\n          });\n        } \n      });\n    }\n  }\n\n  ngOnChanges() {\n    if(this.reset == true) {\n      this.aaCompForm.resetForm();\n    }\n  }\n}\n","import { Component, OnInit, Input, Injector } from '@angular/core';\nimport { AnyAppBaseControl } from '../base-control';\n\n@Component({\n  selector: 'aa-comp-loading',\n  template: `<mat-progress-bar *ngIf=\"visible\" mode=\"indeterminate\"></mat-progress-bar>`,\n  styles: [``]\n})\nexport class LoadingComponent extends AnyAppBaseControl implements OnInit {\n  @Input() visible: boolean = false;\n\n  constructor(_injector: Injector) {\n    super(_injector);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Injector } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { AnyAppBaseControl } from '../base-control';\n\n@Component({\n  selector: 'aa-comp-error',\n  template: `<mat-error *ngIf=\"errorControl && errorControl.hasError('required')\">\n  {{config.errorMessages.required}}\n</mat-error>\n<mat-error *ngIf=\"errorControl && errorControl.hasError('email')\">\n  {{config.errorMessages.email}}\n</mat-error>\n<mat-error *ngIf=\"errorControl && errorControl.hasError('pattern')\">\n  {{config.errorMessages.pattern}}\n</mat-error>\n<mat-error *ngIf=\"errorControl && errorControl.hasError('minLength')\">\n  {{config.errorMessages.minLength}}\n</mat-error>\n<mat-error *ngIf=\"errorControl && errorControl.hasError('maxLength')\">\n  {{config.errorMessages.maxLength}}\n</mat-error>`,\n  styles: [``]\n})\nexport class ErrorComponent extends AnyAppBaseControl implements OnInit {  \n  @Input() errorControl: FormControl;\n\n  constructor(_injector: Injector) { \n    super(_injector);\n  }\n\n  ngOnInit() {\n  }\n}\n","import { Injectable, Optional, SkipSelf, Inject } from \"@angular/core\";\r\nimport { MatPaginatorIntl  } from \"@angular/material\";\r\nimport { ANYAPP_COMPONENTS_CONFIG } from \"../components.config\";\r\nimport { AnyAppComponentsConfig } from \"../components.config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GenericPaginatorIntl extends MatPaginatorIntl {\r\n\tconstructor(\r\n    @Inject(ANYAPP_COMPONENTS_CONFIG) private config: AnyAppComponentsConfig) {\r\n\t\t\tsuper();\r\n\r\n\t\t\t// set labels\r\n\t\t\tthis.itemsPerPageLabel = config.locales.paginator_itemsPerPage;\r\n\t\t\tthis.nextPageLabel = config.locales.paginator_nextPage;\r\n\t\t\tthis.previousPageLabel = config.locales.paginator_previousPage;\r\n\t\t\tthis.firstPageLabel = config.locales.paginator_firstPage;\r\n\t\t\tthis.lastPageLabel = config.locales.paginator_lastPage;\r\n\t\t\t//\r\n\t\t\tthis._of = config.locales.paginator_of;\r\n\t\t}\r\n\t\r\n\tprivate _of: string;\r\n\t\r\n\t/** A label for the range of items within the current page and the length of the whole list. */\r\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n    if (length == 0 || pageSize == 0) { return `0 ${this._of} ${length}`; }\r\n\r\n    length = Math.max(length, 0);\r\n\r\n    const startIndex = page * pageSize;\r\n\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n        Math.min(startIndex + pageSize, length) :\r\n        startIndex + pageSize;\r\n\r\n    return `${startIndex + 1} - ${endIndex} ${this._of} ${length}`;\r\n  }\r\n}\r\n\r\nexport function ANYAPP_PAGINATOR_PROVIDER_FACTORY(parentIntl: MatPaginatorIntl) {\r\n  return parentIntl || new MatPaginatorIntl();\r\n}\r\n\r\nexport const ANYAPP_PAGINATOR_PROVIDER = {\r\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\r\n  provide: MatPaginatorIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\r\n  useFactory: ANYAPP_PAGINATOR_PROVIDER_FACTORY\r\n};","import { Injectable, Optional, SkipSelf, Inject } from \"@angular/core\";\r\nimport { MatSortHeaderIntl  } from \"@angular/material\";\r\nimport { ANYAPP_COMPONENTS_CONFIG } from \"../components.config\";\r\nimport { AnyAppComponentsConfig } from \"../components.config\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GenericSortHeaderIntl extends MatSortHeaderIntl {\r\n\tconstructor(\r\n    @Inject(ANYAPP_COMPONENTS_CONFIG) private config: AnyAppComponentsConfig) {\r\n\t\t\tsuper();\r\n\r\n\t\t\t// set labels\r\n\t\t\tthis._sortBtnLabel = config.locales.sort_buttonLabel;\r\n\t\t}\r\n\t\r\n\tprivate _sortBtnLabel: string;\r\n\t\r\n\t/** ARIA label for the sorting button. */\r\n  sortButtonLabel = (id: string) => {\r\n    return `${this._sortBtnLabel} ${id}`;\r\n  }\r\n}\r\n\r\nexport function ANYAPP_SORT_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\r\n  return parentIntl || new MatSortHeaderIntl();\r\n}\r\n\r\nexport const ANYAPP_SORT_PROVIDER = {\r\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\r\n  provide: MatSortHeaderIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\r\n  useFactory: ANYAPP_SORT_PROVIDER_FACTORY\r\n};","import { Component, OnInit, Input, Injector, ViewEncapsulation } from '@angular/core';\nimport { AnyAppBaseControl } from '../base-control';\nimport { AnyAppMenuItem, AnyAppEventModel, AnyAppEventKeys } from '../components.model';\n\n@Component({\n  selector: 'aa-comp-top-menu',\n  template: `<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n  <mat-toolbar-row>\n\n    <div style=\"display: flex; flex:1; justify-content: space-between;\">\n      <div>\n\n        <button *ngIf=\"sideNavRef\" mat-icon-button (click)=\"sideNavRef.toggle()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n\n        <span>{{title}}</span>\n      </div>\n\n\n      <ng-content></ng-content>\n\n\n      <div>\n\n        <button *ngIf=\"showNotification\" (click)=\"notificationItemClick()\" mat-icon-button>\n          <mat-icon>notification_important</mat-icon>\n        </button>\n\n        <button *ngIf=\"showFace\" (click)=\"faceItemClick()\" mat-icon-button>\n          <mat-icon>face</mat-icon>\n        </button>\n\n        <mat-menu #appMenu=\"matMenu\">\n          <button mat-menu-item *ngFor=\"let menuItem of menu\" (click)=\"menuItemClick(menuItem)\">{{menuItem.text}}</button>\n        </mat-menu>\n\n        <button *ngIf=\"menu && menu.length > 0\" mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n\n      </div>\n    </div>\n\n  </mat-toolbar-row>\n</mat-toolbar>`,\n  styles: [``]\n})\nexport class TopMenuComponent extends AnyAppBaseControl implements OnInit {\n  \n  @Input() sideNavRef: any;\n  @Input() title: string;\n\n  @Input() menu: AnyAppMenuItem[];\n  @Input() showFace: boolean = false;\n  @Input() showNotification: boolean = false;\n\n  constructor(_injector: Injector) {\n    super(_injector);\n  }\n\n  ngOnInit() {\n  }\n\n  notificationItemClick() {\n    this.onEvent.emit(new AnyAppEventModel(AnyAppEventKeys.MENU_NOTIFICATION_CLICK));\n  } \n\n  faceItemClick() {\n      this.onEvent.emit(new AnyAppEventModel(AnyAppEventKeys.MENU_FACE_CLICK));\n  }\n\n  menuItemClick(menuItem: AnyAppMenuItem) {\n    if(menuItem)    \n      this.onEvent.emit(new AnyAppEventModel<AnyAppMenuItem>(AnyAppEventKeys.MENU_ITEM_CLICK, menuItem));\n  }\n}\n","import { Component, OnInit, Injector, Input } from '@angular/core';\nimport { AnyAppBaseControl } from '../base-control';\nimport { AnyAppEventModel, AnyAppTreeModel } from '../components.model';\n\n@Component({\n  selector: 'aa-comp-side-menu',\n  template: `<div class=\"wrapper\" [style.paddingLeft.px]=\"level*10\">\n  <div *ngFor=\"let item of items\">\n    <aa-comp-side-menu-item (onEvent)=\"onItemClick($event)\" [item]=\"item\" [level]=\"level\"></aa-comp-side-menu-item>\n\n    <div><!--[hidden]=\"item.children?.length == 0 || !item.expanded\"-->\n      <aa-comp-side-menu [items]=\"item.children\" [level]=\"level+1\"></aa-comp-side-menu>\n    </div>\n  </div>\n</div>`,\n  styles: [``]\n})\nexport class SideMenuComponent extends AnyAppBaseControl implements OnInit {\n  @Input() items: AnyAppTreeModel[];\n  @Input() level: number = 0;\n\n  constructor(_injector: Injector) {\n    super(_injector);\n  }\n\n  ngOnInit() {\n  }\n\n  // pass event emitter to the app\n  onItemClick(model: AnyAppEventModel<AnyAppTreeModel>) {\n    if(model)\n      this.onEvent.emit(model);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from '@angular/core';\nimport { AnyAppTreeModel, AnyAppEventModel, AnyAppEventKeys } from '../../components.model';\nimport { AnyAppBaseControl } from '../../base-control';\n\n@Component({\n  selector: 'aa-comp-side-menu-item',\n  template: `<div *ngIf=\"item\" (click)=\"clickMenuItem()\">\n  <button mat-button [class.sub]=\"level > 0\">\n    \n    <span>{{item.text}}</span>\n    \n    <mat-icon *ngIf=\"item.children?.length > 0\">\n        {{item.expanded ? 'keyboard_arrow_down' : 'keyboard_arrow_right'}}\n    </mat-icon>\n  </button>\n</div>`,\n  styles: [`button{width:100%;text-align:left}button:not(.sub) span{text-transform:uppercase}mat-icon{position:absolute;top:0;right:0;margin:4px}.sub{font-weight:400}`]\n})\nexport class SideMenuItemComponent extends AnyAppBaseControl implements OnInit {\n  @Input() item: AnyAppTreeModel;\n  @Input() level: number;\n\n  constructor(_inject: Injector) {\n    super(_inject);\n  }\n\n  ngOnInit() {\n  }\n\n  clickMenuItem() {    \n    if(this.item.children && this.item.children.length > 0) {\n      this.item.expanded = !this.item.expanded;\n    }\n\n    if(this.item.navigateUrl != null) {\n      this.onEvent.emit(new AnyAppEventModel<AnyAppTreeModel>(AnyAppEventKeys.MENU_ITEM_CLICK, this.item));\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport {\n  MatButtonModule, MatSidenavModule, MatIconModule, MatTreeModule, MatDividerModule, MatToolbarModule, MatMenuModule,\n  MatProgressBarModule, MatTableModule, MatPaginatorModule, MatSortModule, MatSnackBarModule, MatCheckboxModule, MatInputModule,\n  MatSlideToggleModule, MatSelectModule, MatDatepickerModule, MatSliderModule, MatPaginatorIntl, MatSortHeaderIntl\n} from '@angular/material';\n\nimport { ANYAPP_COMPONENTS_CONFIG } from './components.config';\nimport { ButtonComponent } from './button/button.component';\nimport { TableComponent } from './table/table.component';\nimport { InputComponent } from './input/input.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { SelectComponent } from './select/select.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { IconComponent } from './icon/icon.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { LabelComponent } from './label/label.component';\nimport { FormDirective } from './form/form.directive';\nimport { LoadingComponent } from './loading/loading.component';\nimport { ErrorComponent } from './error/error.component';\nimport { GenericPaginatorIntl } from './table/paginator.intl';\nimport { GenericSortHeaderIntl } from './table/sort.intl';\nimport { TopMenuComponent } from './top-menu/top-menu.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { SideMenuItemComponent } from './side-menu/side-menu-item/side-menu-item.component';\nimport { TableSelectEnum } from './components.config';\nimport { ModuleWithProviders } from '../../../../node_modules/@angular/compiler/src/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    //MatTreeModule,\n    //MatDividerModule,\n    MatProgressBarModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatSliderModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule\n  ],\n  declarations: [\n    TableComponent, InputComponent, CheckboxComponent, SelectComponent, ButtonComponent, DatepickerComponent,\n    FormDirective, TextareaComponent, LabelComponent, SliderComponent, IconComponent, LoadingComponent, ErrorComponent,\n    TopMenuComponent, SideMenuComponent,\n    // no export\n    SideMenuItemComponent\n  ],\n  exports: [\n    TableComponent, InputComponent, CheckboxComponent, SelectComponent, ButtonComponent, DatepickerComponent,\n    FormDirective, TextareaComponent, LabelComponent, SliderComponent, IconComponent, LoadingComponent, ErrorComponent,\n    TopMenuComponent, SideMenuComponent,\n    // material exports\n    MatSidenavModule, MatToolbarModule\n  ],\n\n})\nexport class ComponentsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ComponentsModule,\n      providers: [{\n        provide: ANYAPP_COMPONENTS_CONFIG,\n        useValue: {\n          messageDuration: 3000,\n          locale: \"en-US\",\n\n          locales: {\n            paginator_firstPage: \"First page\",\n            paginator_lastPage: \"Last page\",\n            paginator_itemsPerPage: \"Items per page\",\n            paginator_of: \"of\",\n            paginator_nextPage: \"Next page\",\n            paginator_previousPage: \"Previous page\",\n            sort_buttonLabel: \"Change sorting for\"\n          },\n\n          errorMessages: {\n            required: \"This field is required\",\n            email: \"Please enter a valid e-mail address\",\n            pattern: \"Your input does not match the pattern\",\n            minLength: \"The length of your input is too short\",\n            maxLength: \"The length of your input is too long\",\n            invalidFormMessage: \"The form is invalid. Please correct any errors.\"\n          },\n          tableConfig: {\n            pageSize: 20,\n            selectOption: TableSelectEnum.NoSelect\n          },\n\n          buttonConfig: {\n            buttonTimeoutThreshold: 250\n          },\n\n          formConfig: {\n          }\n        }\n      },\n      {\n        provide: MatPaginatorIntl,\n        useClass: GenericPaginatorIntl,\n        deps: [ANYAPP_COMPONENTS_CONFIG]\n      },\n      {\n        provide: MatSortHeaderIntl,\n        useClass: GenericSortHeaderIntl,\n        deps: [ANYAPP_COMPONENTS_CONFIG]\n      }]\n    };\n  }\n}\n"],"names":["InjectionToken","Injectable","Inject","MatSnackBar","EventEmitter","Output","tslib_1.__extends","Input","Component","Injector","Renderer2","ElementRef","HostListener","MatTableDataSource","SelectionModel","ViewChild","MatPaginator","MatSort","NG_VALUE_ACCESSOR","forwardRef","DateAdapter","MomentDateAdapter","MAT_DATE_LOCALE","MAT_DATE_FORMATS","Directive","MatPaginatorIntl","Optional","SkipSelf","MatSortHeaderIntl","NgModule","CommonModule","FormsModule","BrowserAnimationsModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatSidenavModule","MatToolbarModule","MatMenuModule","MatProgressBarModule","MatCheckboxModule","MatSlideToggleModule","MatSelectModule","MatDatepickerModule","MatSliderModule","MatTableModule","MatPaginatorModule","MatSortModule","MatInputModule"],"mappings":"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"}
